#!/bin/bash
#
# 
#
# Copyright (c) 2022 rickicode. Released under the MIT License.
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )


new_client_dns () {
	echo "Select a DNS server for the client:"
	echo "   1) Current system resolvers"
	echo "   2) Google"
	echo "   3) 1.1.1.1"
	echo "   4) OpenDNS"
	echo "   5) Quad9"
	echo "   6) AdGuard"
	read -p "DNS server [1]: " dns
	until [[ -z "$dns" || "$dns" =~ ^[1-6]$ ]]; do
		echo "$dns: invalid selection."
		read -p "DNS server [1]: " dns
	done
		# DNS
	case "$dns" in
		1|"")
			# Locate the proper resolv.conf
			# Needed for systems running systemd-resolved
			if grep '^nameserver' "/etc/resolv.conf" | grep -qv '127.0.0.53' ; then
				resolv_conf="/etc/resolv.conf"
			else
				resolv_conf="/run/systemd/resolve/resolv.conf"
			fi
			# Extract nameservers and provide them in the required format
			dns=$(grep -v '^#\|^;' "$resolv_conf" | grep '^nameserver' | grep -v '127.0.0.53' | grep -oE '[0-9]{1,3}(\.[0-9]{1,3}){3}' | xargs | sed -e 's/ /, /g')
		;;
		2)
			dns="8.8.8.8, 8.8.4.4"
		;;
		3)
			dns="1.1.1.1, 1.0.0.1"
		;;
		4)
			dns="208.67.222.222, 208.67.220.220"
		;;
		5)
			dns="9.9.9.9, 149.112.112.112"
		;;
		6)
			dns="94.140.14.14, 94.140.15.15"
		;;
	esac
}

new_client_setup () {
	# Given a list of the assigned internal IPv4 addresses, obtain the lowest still
	# available octet. Important to start looking at 2, because 1 is our gateway.
	octet=2
	while grep AllowedIPs /etc/wireguard/wg0.conf | cut -d "." -f 4 | cut -d "/" -f 1 | grep -q "$octet"; do
		(( octet++ ))
	done
	# Don't break the WireGuard configuration in case the address space is full
	if [[ "$octet" -eq 255 ]]; then
		echo "253 clients are already configured. The WireGuard internal subnet is full!"
		exit
	fi
	key=$(wg genkey)
	psk=$(wg genpsk)
	# Configure client in the server
	datenow=$(date +"%Y-%m-%d")
	EXP=$(date +%d-%m-%Y -d "$datenow + $EXPIRED day")

	cat << EOF >> /etc/wireguard/wg0.conf
# BEGIN_PEER $client EXP $EXP
[Peer]
PublicKey = $(wg pubkey <<< $key)
PresharedKey = $psk
AllowedIPs = 192.168.27.$octet/32$(grep -q 'fddd:2c4:2c4:2c4::1' /etc/wireguard/wg0.conf && echo ", fddd:2c4:2c4:2c4::$octet/128")
# END_PEER $client
EOF
	# Create client configuration
	cat << EOF > /root/akun/wg/"$client".conf
[Interface]
Address = 192.168.27.$octet/24$(grep -q 'fddd:2c4:2c4:2c4::1' /etc/wireguard/wg0.conf && echo ", fddd:2c4:2c4:2c4::$octet/64")
DNS = $dns
PrivateKey = $key

[Peer]
PublicKey = $(grep PrivateKey /etc/wireguard/wg0.conf | cut -d " " -f 3 | wg pubkey)
PresharedKey = $psk
AllowedIPs = 0.0.0.0/0, ::/0
Endpoint = $(grep '^# ENDPOINT' /etc/wireguard/wg0.conf | cut -d " " -f 3):$(grep ListenPort /etc/wireguard/wg0.conf | cut -d " " -f 3)
PersistentKeepalive = 25
EOF

	cat << EOF > /root/akun/wg/"$client".txt
	
#Terimakasih Telah Menggunakan Layanan HIJITOKO#

#Masa Aktif	: $EXP#
#====== Informasi Akun ======#
[Interface]
Address = 192.168.27.$octet/24$(grep -q 'fddd:2c4:2c4:2c4::1' /etc/wireguard/wg0.conf && echo ", fddd:2c4:2c4:2c4::$octet/64")
DNS = $dns
PrivateKey = $key

[Peer]
PublicKey = $(grep PrivateKey /etc/wireguard/wg0.conf | cut -d " " -f 3 | wg pubkey)
PresharedKey = $psk
AllowedIPs = 0.0.0.0/0, ::/0
Endpoint = $(grep '^# ENDPOINT' /etc/wireguard/wg0.conf | cut -d " " -f 3):$(grep ListenPort /etc/wireguard/wg0.conf | cut -d " " -f 3)
PersistentKeepalive = 25
#====== Informasi Akun ======#
EOF
}


echo
echo "Provide a name for the client:"
read -p "Name: " unsanitized_client
cekuser=$(grep -P "^# BEGIN_PEER $unsanitized_client " /etc/wireguard/wg0.conf)
if [[ -z "$cekuser" ]]; then
		# Allow a limited set of characters to avoid conflicts
		client=$(sed 's/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g' <<< "$unsanitized_client")
		while [[ -z "$client" ]] || grep -q "^# BEGIN_PEER $client$" /etc/wireguard/wg0.conf; do
	echo "$client: invalid name."
	read -p "Name: " unsanitized_client
	client=$(sed 's/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g' <<< "$unsanitized_client")
		done
		echo
		new_client_dns
		read -p 'Expired (days) : ' EXPIRED
		while [[ ! $EXPIRED =~ ^-?[0-9]+$ ]]; do 
	echo "Woy Salah! Nomor doang"
	read -p 'Enter Expired Day : ' EXPIRED
		done
		new_client_setup
		# Append new client configuration to the WireGuard interface
		wg addconf wg0 <(sed -n "/^# BEGIN_PEER $client /,/^# END_PEER $client/p" /etc/wireguard/wg0.conf)
		echo
		qrencode -t UTF8 < /root/akun/wg/"$client.conf"
		echo -e '\xE2\x86\x91 That is a QR code containing your client configuration.'
		echo

		echo "$client added. Configuration available in:" /root/akun/wg/"$client.conf"
				
	echo
	echo
	cat "/root/akun/wg/$client.txt"
		
		exit
	else
	echo "Akun $unsanitized_client Sudah ada!"
	exit
fi
